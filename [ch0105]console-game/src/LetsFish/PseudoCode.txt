시작
유저의 이름을 입력받는다.
입력 : 유저의 이름
유저가 생성되면 시도 횟수에 대한 int try[10], int point, int item 변수들이 선언 및 초기화된다.

출력 : {유저의 이름}님, 지금부터 낚시게임을 시작합니다!

if(시도횟수 == 10)
출력 :
1.낚시 시도하기
2.최고급 미끼로 낚시 시도하기
3.그냥 집에 갈래
else
출력 : 1.낚시 재시도하기
2.최고급 미끼로 낚시 재시도하기
3.그냥 집에 갈래

옵션이 나타나면 어떤 옵션을 선택할 지 입력 받는다.
입력 : 옵션번호
츨력 : if(옵션 == 1)
시도횟수대로 해당 배열 인덱스 값에 랜덤으로 퍼센트가 할당된다.
예를 들어,1번째시도면, times[0]에 값이 할당되고, 그 값을 토대로 성공유무를 확인한다.

if(times[i] >= 50)
점수를 랜덤 획득, 사용자의 점수가 올라간다, 시도횟수 -1 차감
출력 : 낚시 성공! {times[i]}P를 획득했습니다. 현재 포인트는 {point+times[i]}P, 남은 낚시 횟수는 {9-i}번, 남은 최고급 미끼는 {item}개

else if(times[i] < 50)
점수 획득 실패, 점수는 그대로, 시도횟수 -1 차감
출력 : 낚시 실패! 포인트를 획득하지 못했습니다. 현재 포인트는 {point}P, 남은 낚시 횟수는 {9-i}번, 남은 최고급 미끼는 {item}개

else if(옵션 == 2)
시도횟수대로 해당 배열 인덱스 값에 랜덤퍼센트 +30퍼가 할당된다.

if(times[i] >= 50)
점수를 랜덤 획득, 사용자의 점수가 올라간다, 시도횟수 -1 차감, 아이템 -1 차감
출력 : 낚시 성공! {times[i]}P를 획득했습니다. 현재 포인트는 {point+times[i]}P, 남은 낚시 횟수는 {9-i}번, 남은 최고급 미끼는 {item}개

else if(times[i] < 50)
점수 획득 실패, 점수는 그대로, 시도횟수 -1 차감, 아이템 -1 차감
출력 : 낚시 실패! 포인트를 획득하지 못했습니다. 현재 포인트는 {point}P, 남은 낚시 횟수는 {9-i}번, 남은 최고급 미끼는 {item}개

else if(옵션 == 3)
게임을 종료한다.
출력 : 게임을 종료합니다.
종료